m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(MO ~ Ca + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
groups_col <- cut(res_4, breaks = 5)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
model_5 <- lm(MO ~ Ca + I(Long**2) + I(Lat**2) + I(Ca**2)+ Long + Lat , data = df) #datos georrefenciados
summary(model_5)
res_5 <- model_5$residuals
Moran.I(res_5, m_dist_inv)
xy = as.matrix(df[,c(2,3)])
contnb <- dnearneigh(coordinates(xy),0,380000,longlat = F)
dlist <- nbdists(contnb, xy)
dlist <- lapply(dlist, function(x) 1/x)            #inverse distance
Wve <- nb2listw(contnb,glist=dlist,style = "W")       #W matriz-standarized
model_auto <- spautolm(MO ~ 1,data = df,listw=Wve)
summary(model_auto)
res_6 <- model_auto$fit$residuals
Moran.I(res_6, m_dist_inv)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
datos_xp <- read_excel("~/Computacion estadistica/Clase 4/XPABLO.xlsx")
#View(datos_xp)
names(datos_xp)
df <- datos_xp[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(K ~ Fe, data = df)
summary(model_1)
ggplot(df, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Fe <= 1000)
df_2
model_2 <- lm(K ~ Fe, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
ggplot(df_2, aes(Long, Lat))+
geom_point(size = abs(res_2))
groups_col <- cut(res_2, breaks = 7)
#color <-
ggplot(df_2, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
matriz_dist <- as.matrix(dist(cbind(x = df_2$Long, y = df_2$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_2, m_dist_inv)
Moran.I(res_2, m_dist_inv)
model_3 <- lm(K ~ Fe + CICE, data = df)
summary(model_3)
res_3 <- model_3$residuals
matriz_dist <- as.matrix(dist(cbind(x = df$Long, y = df$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(K ~ Fe + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
groups_col <- cut(res_4, breaks = 5)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
model_5 <- lm(K ~ Fe + I(Long**2) + I(Lat**2) + I(Fe**2)+ Long + Lat , data = df) #datos georrefenciados
summary(model_5)
res_5 <- model_5$residuals
Moran.I(res_5, m_dist_inv)
xy = as.matrix(df[,c(2,3)])
xy = as.matrix(df[,c(2,3)])
contnb <- dnearneigh(coordinates(xy),0,380000,longlat = F)
dlist <- nbdists(contnb, xy)
dlist <- lapply(dlist, function(x) 1/x)            #inverse distance
Wve <- nb2listw(contnb,glist=dlist,style = "W")       #W matriz-standarized
model_auto <- spautolm(K ~ 1,data = df,listw=Wve)
summary(model_auto)
res_6 <- model_auto$fit$residuals
Moran.I(res_6, m_dist_inv)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
XPABLO_2_ <- read_excel("~/Computacion estadistica/Clase 4/XPABLO (2).xlsx")
View(XPABLO_2_)
names(XPABLO_2_)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Cu <= 8)
df_2
model_2 <- lm(Mg ~ Cu, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
groups_col <- cut(res_4, breaks = 7)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
XPABLO_2_ <- read_excel("~/Computacion estadistica/Clase 4/XPABLO (2).xlsx")
View(XPABLO_2_)
names(XPABLO_2_)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Cu <= 8)
df_2
model_2 <- lm(Mg ~ Cu, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
ggplot(df_2, aes(Long, Lat))+
geom_point(size = abs(res_2))
groups_col <- cut(res_2, breaks = 7)
#color <-
ggplot(df_2, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
matriz_dist <- as.matrix(dist(cbind(x = df_2$Long, y = df_2$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_2, m_dist_inv)
model_3 <- lm(Mg ~ Cu + CICE, data = df)
summary(model_3)
res_3 <- model_3$residuals
matriz_dist <- as.matrix(dist(cbind(x = df$Long, y = df$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(MO ~ Ca + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
groups_col <- cut(res_4, breaks = 7)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
XPABLO_2_ <- read_excel("~/Computacion estadistica/Clase 4/XPABLO (2).xlsx")
View(XPABLO_2_)
names(XPABLO_2_)
setwd("C:/Users/master/Downloads")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
hist(res_2)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
res_2 <- model_2$residuals
hist(res_2)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
groups_col <- cut(res_4, breaks = 5)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
datos_xp <- read_excel("~/Computacion estadistica/Clase 4/XPABLO.xlsx")
#View(datos_xp)
names(datos_xp)
df <- datos_xp[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(K ~ Fe, data = df)
summary(model_1)
ggplot(df, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Fe <= 1000)
df_2
model_2 <- lm(K ~ Fe, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
ggplot(df_2, aes(Long, Lat))+
geom_point(size = abs(res_2))
groups_col <- cut(res_2, breaks = 7)
#color <-
ggplot(df_2, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
matriz_dist <- as.matrix(dist(cbind(x = df_2$Long, y = df_2$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_2, m_dist_inv)
model_3 <- lm(K ~ Fe + CICE, data = df)
summary(model_3)
res_3 <- model_3$residuals
matriz_dist <- as.matrix(dist(cbind(x = df$Long, y = df$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(K ~ Fe + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
names(XPABLO_2_)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Cu <= 8)
df_2
model_2 <- lm(Mg ~ Cu, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
ggplot(df_2, aes(Long, Lat))+
geom_point(size = abs(res_2))
groups_col <- cut(res_2, breaks = 7)
#color <-
ggplot(df_2, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
matriz_dist <- as.matrix(dist(cbind(x = df_2$Long, y = df_2$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_2, m_dist_inv)
Moran.I(res_2, m_dist_inv)
model_3 <- lm(Mg ~ Cu + CICE, data = df)
summary(model_3)
res_3 <- model_3$residuals
matriz_dist <- as.matrix(dist(cbind(x = df$Long, y = df$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(MO ~ Ca + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
XPABLO_2_ <- read_excel("~/Computacion estadistica/Clase 4/XPABLO (2).xlsx")
View(XPABLO_2_)
names(XPABLO_2_)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep)
library(ape)
library(sp)
library(readxl)
library(psych)
library(openxlsx)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(spatialreg) ## Librería que permite utilizar datos espaciales
library(spdep) ## libreria de dependencia espacial, para crear matriz de pesos espaciales a partir de contiguidades de poligonos
library(ape) ## lee, escribir, trazar y manipular arboles filogeneticos para hacer analisis comparativo
library(sp) ## Clases y metodos para datos espciales y modelo 2D Y 3D.
library(readxl)
library(psych) #
library(openxlsx)
library(ggplot2) # generar graficos
library(dplyr)
XPABLO_2_ <- read_excel("~/Computacion estadistica/Clase 4/XPABLO (2).xlsx")
View(XPABLO_2_)
names(XPABLO_2_)
df <- XPABLO_2_[-c(15,16,17,18,19)]
names(df)
model_1 <- lm(Mg ~ Cu, data = df)
summary(model_1)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
ggplot(df, aes(y = Mg, x = Cu)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Cu <= 8)
df_2
model_2 <- lm(Mg ~ Cu, data = df_2)
summary(model_2)
model_1 <- lm(K ~ Fe, data = df)
summary(model_1)
ggplot(df, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
df_2 <- df |>
filter(Fe <= 1000)
df_2
model_2 <- lm(K ~ Fe, data = df_2)
summary(model_2)
ggplot(df_2, aes(y = K, x = Fe)) +
geom_point()+
geom_smooth(method='lm', se = F)
res_2 <- model_2$residuals
hist(res_2)
res_2 <- model_2$residuals
ggplot(df_2, aes(Long, Lat))+
geom_point(size = res_2)
ggplot(df_2, aes(Long, Lat))+
geom_point(size = abs(res_2))
groups_col <- cut(res_2, breaks = 7)
#color <-
ggplot(df_2, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
matriz_dist <- as.matrix(dist(cbind(x = df_2$Long, y = df_2$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_2, m_dist_inv)
model_3 <- lm(K ~ Fe + CICE, data = df)
summary(model_3)
res_3 <- model_3$residuals
matriz_dist <- as.matrix(dist(cbind(x = df$Long, y = df$Lat)))
dim(matriz_dist)
m_dist_inv <- 1/matriz_dist
m_dist_inv[is.infinite(m_dist_inv)] <- 0
diag(m_dist_inv) <- 0
m_dist_inv
Moran.I(res_3, m_dist_inv)
model_4 <- lm(K ~ Fe + Long + Lat + I(Long**2) + I(Lat**2), data = df) #datos georrefenciados
summary(model_4)
res_4 <- model_4$residuals
shapiro.test(res_4)
plot(res_4, pch = 16)
Moran.I(res_4, m_dist_inv)
groups_col <- cut(res_4, breaks = 5)
ggplot(df, aes(Long, Lat, color = groups_col))+
geom_point(size = 3)
